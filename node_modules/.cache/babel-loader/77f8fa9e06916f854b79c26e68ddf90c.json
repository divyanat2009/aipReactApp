{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\divya\\\\Documents\\\\projects\\\\aipBasicReactApp\\\\src\\\\Components\\\\NewPost.js\";\nimport React, { Component } from 'react';\nimport Nav from './Nav';\nimport FilterButtons from './FilterButtons';\nimport FilterButtonsForm from './FilterButtonsForm';\nimport Context from '../Context';\nimport '../_styles/Form.css';\nimport config from '../config';\nimport ValidationError from './ValidationError';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt, faIdCard, faSmile } from '@fortawesome/free-regular-svg-icons';\nimport { faPodcast, faSeedling, faBookOpen, faUser, faHeartbeat } from '@fortawesome/free-solid-svg-icons';\nimport { BASE_URL } from \"../../src/config\";\n\nclass NewPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateFields = fieldTypeSelected => {\n      const {\n        inputs\n      } = this.state; //resetting any touched input values to false\n\n      Object.keys(inputs).forEach(key => {\n        inputs[key].touched = false;\n      }); //clear values\n\n      Object.keys(inputs).forEach(key => {\n        inputs[key].value = \"\";\n      });\n      inputs.post_image.file = \"\"; //clear all form fields \n\n      this.refs.form.reset();\n      this.setState({\n        fieldType: fieldTypeSelected,\n        inputs: inputs\n      });\n    };\n\n    this.updateChange = (inputValue, id) => {\n      const {\n        inputs\n      } = this.state; //console.log(inputs)\n\n      if (id !== 'post_image') {\n        inputs[id] = {\n          value: inputValue,\n          touched: true\n        };\n      } else if (id === 'post_image') {\n        console.log(inputValue[0]);\n        inputs[id] = {\n          file: inputValue[0],\n          touched: true\n        };\n      }\n\n      this.setState({\n        inputs: inputs\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        inputs,\n        fieldType\n      } = this.state;\n      let newPostWithImage = {\n        user_id: 1,\n        post_type: fieldType,\n        title: inputs.title.value,\n        link: inputs.link.value,\n        content: inputs.content.value,\n        by: inputs.by.value,\n        image_path: ''\n      };\n      let url = `${config.API_ENDPOINT}/posts`;\n\n      if (inputs.post_image.file) {\n        let formData = new FormData();\n        const fileField = inputs.post_image.file;\n        formData.append('image', fileField);\n        let image_url = `${config.API_ENDPOINT}/upload`;\n        fetch(image_url, {\n          method: 'POST',\n          body: formData\n        }).then(res => {\n          return res.json();\n        }).then(res => {\n          newPostWithImage.image_path = res.data.image;\n          console.log(newPostWithImage);\n          return fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(newPostWithImage),\n            headers: {\n              'content-type': 'application/json',\n              'Access-Control-Allow-Origin': '*' // 'authorization': `Bearer ${config.API_KEY}`\n\n            }\n          });\n        }).then(resp => {\n          if (!resp.ok) {\n            // get the error message from the response,\n            return resp.json().then(error => {\n              // then throw it\n              throw error;\n            });\n          }\n\n          return resp.json();\n        }).then(post => {\n          this.props.history.push('/dashboard');\n          this.context.addPost(newPostWithImage);\n        }).catch(error => {\n          this.setState({\n            error\n          });\n        });\n      } else if (!inputs.post_image.file) {\n        let newPost = {\n          user_id: 1,\n          post_type: fieldType,\n          title: inputs.title.value,\n          link: inputs.link.value,\n          content: inputs.content.value,\n          by: inputs.by.value,\n          image_path: ''\n        };\n        fetch(url, {\n          method: 'POST',\n          body: JSON.stringify(newPost),\n          headers: {\n            'content-type': 'application/json',\n            'Access-Control-Allow-Origin': '*' // 'authorization': `Bearer ${config.API_KEY}`\n\n          }\n        }).then(res => {\n          if (!res.ok) {\n            // get the error message from the response,\n            return res.json().then(error => {\n              // then throw it\n              throw error;\n            });\n          }\n\n          return res.json();\n        }).then(post => {\n          this.props.history.push('/dashboard');\n          this.context.addPost(newPost);\n        }).catch(error => {\n          this.setState({\n            error\n          });\n        });\n      }\n    };\n\n    this.BetaVersionPopUp = e => {\n      e.preventDefault();\n      this.setState({\n        isBoxVisible: true\n      });\n    };\n\n    this.state = {\n      error: null,\n      submitDisabled: true,\n      fieldType: '',\n      inputs: {\n        title: {\n          value: \"\",\n          touched: false\n        },\n        author: {\n          value: \"\",\n          touched: false\n        },\n        by: {\n          value: \"\",\n          touched: false\n        },\n        link: {\n          value: \"\",\n          touched: false\n        },\n        content: {\n          value: \"\",\n          touched: false\n        },\n        post_image: {\n          value: \"\",\n          touched: false,\n          file: \"\"\n        }\n      },\n      user: this.props.match.params.username\n    }; //end of state\n  } //updates the fields displayed depending on the type of post\n\n\n  validateContent() {\n    const content = this.state.inputs.content.value.trim();\n\n    if (content.length > 800) {\n      return 'Please keep posts under 800 characters.';\n    }\n  }\n\n  validateLink() {\n    const link = this.state.inputs.link.value;\n    let regexp = /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n    if (!regexp.test(link)) {\n      return 'Please enter a valid url';\n    }\n  }\n\n  postData() {\n    console.log(\"Clicked!\");\n    const user = this.props.match.params.username;\n    console.log(user);\n    const {\n      inputs,\n      fieldType\n    } = this.state; //user_id, title, link, start_date,by,content, post_type\n\n    console.log(BASE_URL + '/posts/' + user);\n    fetch(BASE_URL + '/posts/' + user, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({\n        post_type: fieldType,\n        title: inputs.title.value,\n        link: inputs.link.value,\n        content: inputs.content.value,\n        by: inputs.by.value\n      })\n    }).then(response => response.json()).then(response => {\n      console.log(response);\n      alert(\"Thank you for your post!\"); //window.location.href = BASE_URL_FRONTEND+\"/my-account\";\n    }).catch(err => alert(err));\n  }\n\n  render() {\n    const contentError = this.validateContent();\n    const linkError = this.validateLink();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-post form-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          pageType: 'interior',\n          user: this.state.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FilterButtons, {\n          buttonInfo: [{\n            aria_label: 'my posts',\n            icon_type: faUser,\n            link: `/${this.state.user}/dashboard`,\n            display_change: 'user',\n            tooltipMessage: 'view all your posts',\n            tooltipClass: 'bottom-farright'\n          }, {\n            aria_label: 'my account',\n            icon_type: faIdCard,\n            link: '/my-account',\n            display_change: 'all',\n            tooltipMessage: 'signin to your account',\n            tooltipClass: 'bottom-farright'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(FilterButtonsForm, {\n          updateFields: this.updateFields,\n          buttonInfo: [{\n            aria_label: 'fields to create new recipe post',\n            icon_type: faSeedling,\n            field_type: 'recipe',\n            tooltipMessage: 'create a recipe post',\n            tooltipClass: 'bottom-farright'\n          }, {\n            ariaLabel: 'fields to create new book post',\n            icon_type: faBookOpen,\n            field_type: 'book',\n            tooltipMessage: 'create a book post',\n            tooltipClass: 'bottom-right'\n          }, {\n            aria_label: 'fields to create new podcast post',\n            icon_type: faPodcast,\n            field_type: 'podcast',\n            tooltipMessage: 'create a podcast post',\n            tooltipClass: 'bottom-center'\n          }, {\n            aria_label: 'lifestyle posts',\n            icon_type: faHeartbeat,\n            field_type: 'lifestyle',\n            tooltipMessage: 'create a lifestyle post',\n            tooltipClass: 'bottom-left'\n          }, {\n            aria_label: 'event posts',\n            icon_type: faCalendarAlt,\n            field_type: 'event',\n            tooltipMessage: 'create an event post',\n            tooltipClass: 'bottom-farleft'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"new-post-form\",\n          onSubmit: e => this.handleSubmit(e),\n          ref: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-intro\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `box beta-version-box ${this.state.isBoxVisible ? \"\" : \"hidden\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Please use the buttons above to select the type of post you want to create and the form below to share some positivity with others.\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                className: \"filter-icon inline-block-icon\",\n                icon: faSmile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 159\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Create a new \", this.state.fieldType, \" post\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field-group field-title\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"title\",\n                children: \"Title*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"title\",\n                id: \"title\",\n                placeholder: \"A New Beginning\",\n                onChange: e => this.updateChange(e.target.value, e.target.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field-group field-author\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"by\",\n                children: \"Author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"by\",\n                id: \"by\",\n                placeholder: \"Maya Angelou\",\n                onChange: e => this.updateChange(e.target.value, e.target.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field-group field-link\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"link\",\n                children: \"Link*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"url\",\n                name: \"link\",\n                id: \"link\",\n                placeholder: \"http://someamazingsite.com\",\n                onChange: e => this.updateChange(e.target.value, e.target.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 25\n            }, this), this.state.inputs.link.touched && /*#__PURE__*/_jsxDEV(ValidationError, {\n              message: linkError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 62\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field-group field-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"content\",\n                children: \"Content*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"textarea\",\n                name: \"content\",\n                id: \"content\",\n                onChange: e => this.updateChange(e.target.value, e.target.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 25\n            }, this), this.state.inputs.content.touched && /*#__PURE__*/_jsxDEV(ValidationError, {\n              message: contentError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 65\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field-group field-img\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"post-image\",\n                children: \"Upload Screenshot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"post_image\",\n                accept: \".png,.jpg,.gif.bmp, .jpeg\",\n                id: \"post_image\",\n                alt: \"user-uploaded-image\",\n                onChange: e => this.updateChange(e.target.files, e.target.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-buttons button-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => this.postData(),\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"reset\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nNewPost.contextType = Context;\nexport default NewPost;","map":{"version":3,"sources":["C:/Users/divya/Documents/projects/aipBasicReactApp/src/Components/NewPost.js"],"names":["React","Component","Nav","FilterButtons","FilterButtonsForm","Context","config","ValidationError","FontAwesomeIcon","faCalendarAlt","faIdCard","faSmile","faPodcast","faSeedling","faBookOpen","faUser","faHeartbeat","BASE_URL","NewPost","constructor","props","updateFields","fieldTypeSelected","inputs","state","Object","keys","forEach","key","touched","value","post_image","file","refs","form","reset","setState","fieldType","updateChange","inputValue","id","console","log","handleSubmit","e","preventDefault","newPostWithImage","user_id","post_type","title","link","content","by","image_path","url","API_ENDPOINT","formData","FormData","fileField","append","image_url","fetch","method","body","then","res","json","data","image","JSON","stringify","headers","resp","ok","error","post","history","push","context","addPost","catch","newPost","BetaVersionPopUp","isBoxVisible","submitDisabled","author","user","match","params","username","validateContent","trim","length","validateLink","regexp","test","postData","response","alert","err","render","contentError","linkError","aria_label","icon_type","display_change","tooltipMessage","tooltipClass","field_type","ariaLabel","target","files","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Nav from './Nav';\r\nimport FilterButtons from './FilterButtons';\r\nimport FilterButtonsForm from './FilterButtonsForm';\r\nimport Context from '../Context'\r\nimport '../_styles/Form.css';\r\nimport config from '../config'\r\nimport ValidationError from './ValidationError'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCalendarAlt, faIdCard, faSmile  } from '@fortawesome/free-regular-svg-icons';\r\nimport { faPodcast, faSeedling, faBookOpen,faUser, faHeartbeat} from '@fortawesome/free-solid-svg-icons';\r\nimport {BASE_URL} from \"../../src/config\";\r\n\r\n\r\nclass NewPost extends Component{\r\n  static contextType = Context;\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      error:null,\r\n      submitDisabled:true,\r\n      fieldType:'',      \r\n      inputs:{\r\n      title:{value:\"\",touched:false},\r\n      author:{value:\"\",touched:false},\r\n      by:{value:\"\",touched:false},\r\n      link:{value:\"\",touched:false},\r\n      content:{value:\"\",touched:false},\r\n      post_image:{value:\"\",touched:false, file:\"\"}},\r\n      user: this.props.match.params.username\r\n    }//end of state\r\n  }\r\n  //updates the fields displayed depending on the type of post\r\n  updateFields=(fieldTypeSelected)=>{\r\n    const {inputs} = this.state  \r\n   \r\n  //resetting any touched input values to false\r\n    Object.keys(inputs).forEach(key => {\r\n     inputs[key].touched=false;\r\n    });\r\n  //clear values\r\n    Object.keys(inputs).forEach(key => {\r\n     inputs[key].value=\"\";\r\n    });\r\n    inputs.post_image.file=\"\";\r\n        \r\n  //clear all form fields \r\n    this.refs.form.reset();\r\n    this.setState({\r\n        fieldType:fieldTypeSelected,\r\n        inputs:inputs,\r\n        })\r\n    }\r\n\r\n  updateChange=(inputValue, id)=>{\r\n    const {inputs} = this.state;\r\n    //console.log(inputs)\r\n    \r\n    if(id!=='post_image'){\r\n        inputs[id]={value:inputValue,touched:true}\r\n     }\r\n     else if(id==='post_image'){\r\n         console.log(inputValue[0])\r\n         inputs[id]={file:inputValue[0],touched:true}\r\n     }\r\n    this.setState({inputs:inputs})    \r\n  }\r\n\r\n\r\nvalidateContent(){\r\n    const content = this.state.inputs.content.value.trim();\r\n    if (content.length>800){\r\n        return 'Please keep posts under 800 characters.'\r\n    } \r\n}\r\n\r\nvalidateLink(){\r\n    const link = this.state.inputs.link.value;\r\n    let regexp =  /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\r\n\r\n    if (!regexp.test(link))\r\n    {\r\n        return 'Please enter a valid url'\r\n    }\r\n}\r\n\r\nhandleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    const {inputs, fieldType}=this.state;     \r\n    \r\n    let newPostWithImage = {\r\n        user_id:1,\r\n        post_type:fieldType,\r\n        title:inputs.title.value,\r\n        link:inputs.link.value,\r\n        content:inputs.content.value,\r\n        by:inputs.by.value,\r\n        image_path:''\r\n    }\r\n    let url = `${config.API_ENDPOINT}/posts`\r\n    if(inputs.post_image.file){\r\n        let formData = new FormData();\r\n        const fileField = inputs.post_image.file;        \r\n        formData.append('image', fileField);        \r\n\r\n        let image_url = `${config.API_ENDPOINT}/upload`;\r\n        \r\n        fetch(image_url, {\r\n            method: 'POST',\r\n            body: formData,\r\n            })\r\n        .then(res => {\r\n           return res.json()\r\n        })\r\n        .then(res => {\r\n            newPostWithImage.image_path = res.data.image;\r\n            console.log(newPostWithImage)\r\n           return  fetch(url, {\r\n                method: 'POST',\r\n                body: JSON.stringify(newPostWithImage),\r\n                headers: {\r\n                  'content-type': 'application/json',\r\n                  'Access-Control-Allow-Origin':'*'\r\n                 // 'authorization': `Bearer ${config.API_KEY}`\r\n                }\r\n              })\r\n        })\r\n       .then(resp => {\r\n          if (!resp.ok) {\r\n          // get the error message from the response,\r\n            return resp.json().then(error => {\r\n            // then throw it\r\n            throw error\r\n            })\r\n          }\r\n           return resp.json()\r\n        })\r\n        .then(post => {\r\n            this.props.history.push('/dashboard')\r\n            this.context.addPost(newPostWithImage)       \r\n        })\r\n        .catch(error => {\r\n            this.setState({ error })\r\n        })    \r\n    }    \r\nelse if(!inputs.post_image.file){  \r\n  let newPost = {\r\n    user_id:1,\r\n    post_type:fieldType,\r\n    title:inputs.title.value,\r\n    link:inputs.link.value,\r\n    content:inputs.content.value,\r\n    by:inputs.by.value,\r\n    image_path:''\r\n}\r\nfetch(url, {\r\n    method: 'POST',\r\n    body: JSON.stringify(newPost),\r\n    headers: {\r\n    'content-type': 'application/json',\r\n    'Access-Control-Allow-Origin':'*'\r\n    // 'authorization': `Bearer ${config.API_KEY}`\r\n    }  \r\n})\r\n.then(res => {\r\n    if (!res.ok) {\r\n        // get the error message from the response,\r\n        return res.json().then(error => {\r\n        // then throw it\r\n        throw error\r\n        })\r\n    }\r\n    return res.json()\r\n    })\r\n    .then(post => {\r\n      this.props.history.push('/dashboard')\r\n      this.context.addPost(newPost)    \r\n    })\r\n    .catch(error => {\r\n      this.setState({ error })\r\n    })\r\n  }\r\n}      \r\n\r\npostData()\r\n{\r\n    console.log(\"Clicked!\")\r\n    const user = this.props.match.params.username;\r\n    console.log(user);\r\n    const {inputs, fieldType}=this.state; \r\n    //user_id, title, link, start_date,by,content, post_type\r\n    console.log(BASE_URL+'/posts/'+user);\r\n    fetch(BASE_URL+'/posts/'+user, {\r\n        \r\n      method:'post',\r\n      headers:{          \r\n          'Content-Type' : 'application/json',\r\n          'Access-Control-Allow-Origin':'*'\r\n        },\r\n      body:JSON.stringify({\r\n        post_type:fieldType,\r\n        title:inputs.title.value,\r\n        link:inputs.link.value,\r\n        content:inputs.content.value,\r\n        by:inputs.by.value,        \r\n      })\r\n    })\r\n    .then(response=> response.json())\r\n    .then(response=>{\r\n        console.log(response)\r\n      alert(\"Thank you for your post!\");\r\n      //window.location.href = BASE_URL_FRONTEND+\"/my-account\";\r\n    })\r\n    .catch(err => alert(err))\r\n}\r\nBetaVersionPopUp=(e)=>{\r\n    e.preventDefault();\r\n    this.setState({ isBoxVisible: true });\r\n}\r\nrender(){    \r\n    const contentError = this.validateContent();\r\n    const linkError = this.validateLink();\r\n\r\n    return(\r\n        <div className=\"new-post form-page\">\r\n            <header>\r\n                <Nav pageType={'interior'} user={this.state.user}/>\r\n                <FilterButtons\r\n                    buttonInfo={[                    \r\n                    {aria_label:'my posts',icon_type:faUser, link:`/${this.state.user}/dashboard`, display_change:'user', tooltipMessage:'view all your posts',tooltipClass:'bottom-farright'},\r\n                    {aria_label:'my account',icon_type:faIdCard, link:'/my-account',display_change:'all', tooltipMessage:'signin to your account',tooltipClass:'bottom-farright'},                    \r\n                    ]}                \r\n                />\r\n            </header>\r\n            <main>\r\n            <FilterButtonsForm\r\n                    updateFields = {this.updateFields}\r\n                    buttonInfo={[\r\n                    {aria_label:'fields to create new recipe post',icon_type:faSeedling,field_type:'recipe', tooltipMessage:'create a recipe post',tooltipClass:'bottom-farright'},\r\n                    {ariaLabel:'fields to create new book post',icon_type:faBookOpen, field_type:'book', tooltipMessage:'create a book post',tooltipClass:'bottom-right'},\r\n                    {aria_label:'fields to create new podcast post',icon_type:faPodcast,field_type:'podcast', tooltipMessage:'create a podcast post',tooltipClass:'bottom-center'},\r\n                    {aria_label:'lifestyle posts',icon_type:faHeartbeat, field_type:'lifestyle',tooltipMessage:'create a lifestyle post',tooltipClass:'bottom-left'},\r\n                    {aria_label:'event posts',icon_type:faCalendarAlt,field_type:'event', tooltipMessage:'create an event post',tooltipClass:'bottom-farleft'}]}\r\n                />\r\n\r\n                <form className=\"new-post-form\" \r\n                    onSubmit={e=>this.handleSubmit(e)}\r\n                    ref=\"form\">\r\n                    <div className=\"form-intro\">\r\n                    <div className={`box beta-version-box ${this.state.isBoxVisible ? \"\" : \"hidden\"}`}></div>    \r\n                        <p>Please use the buttons above to select the type of post you want to create and the form below to share some positivity with others.<FontAwesomeIcon className=\"filter-icon inline-block-icon\" icon={faSmile} /></p>\r\n                        <h2>Create a new {this.state.fieldType} post</h2>\r\n                    </div>\r\n                    <div>\r\n                        <div className='form-field-group field-title'>\r\n                            <label htmlFor=\"title\">Title*</label>\r\n                            <input \r\n                                type=\"text\" name=\"title\" id=\"title\" placeholder=\"A New Beginning\"\r\n                                onChange={e => this.updateChange(e.target.value, e.target.id)}/>\r\n                        </div>\r\n                        <div \r\n                             className='form-field-group field-author'>\r\n                            <label htmlFor=\"by\">Author</label>\r\n                            <input \r\n                                type=\"text\" name=\"by\" id=\"by\" placeholder=\"Maya Angelou\"\r\n                                onChange={e => this.updateChange(e.target.value, e.target.id)}/>\r\n                        </div>                        \r\n                        \r\n                        <div className='form-field-group field-link'>\r\n                            <label htmlFor=\"link\">Link*</label>\r\n                            <input \r\n                                type=\"url\" name=\"link\" id=\"link\" placeholder=\"http://someamazingsite.com\"\r\n                                onChange={e => this.updateChange(e.target.value, e.target.id)}/>\r\n                        </div>\r\n                        {this.state.inputs.link.touched  && (<ValidationError message={linkError}/>)}\r\n                        <div className='form-field-group field-content'>\r\n                            <label htmlFor=\"content\">Content*</label>\r\n                            <textarea\r\n                                type=\"textarea\" name=\"content\"\r\n                                id=\"content\"\r\n                                onChange={e => this.updateChange(e.target.value, e.target.id)}\r\n                                />\r\n                        </div>\r\n                        {this.state.inputs.content.touched  && (<ValidationError message={contentError}/>)}                        \r\n                        <div className=\"form-field-group field-img\">\r\n                            <label htmlFor=\"post-image\">Upload Screenshot</label>\r\n                            <input\r\n                                type=\"file\" name=\"post_image\"\r\n                                accept=\".png,.jpg,.gif.bmp, .jpeg\"\r\n                                id=\"post_image\"\r\n                                alt=\"user-uploaded-image\"\r\n                                onChange={e => this.updateChange(e.target.files, e.target.id)}\r\n                                />\r\n                        </div>\r\n                    </div>\r\n                        \r\n                    <div className=\"form-buttons button-row\">    \r\n                        <button type=\"button\" onClick={()=>this.postData()}>Post</button>\r\n                        <button type=\"reset\">Cancel</button>\r\n                    </div>\r\n                  \r\n                </form>\r\n                \r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}