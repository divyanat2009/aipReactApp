{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/johnakhilomen/Downloads/aipBasicReactApp/src/Components/AddBookmark.js\";\nimport React from 'react';\nimport Context from '../Context';\nimport config from '../config.js';\nimport Tooltip from './Tooltip';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBookmark } from '@fortawesome/free-solid-svg-icons';\n\nfunction addBookmarkRequest(allPostInfo, currentUserId, callback) {\n  let newBookmarkPost = allPostInfo;\n  let newBookmark = {\n    user_id: currentUserId,\n    post_id: allPostInfo.post_id\n  }; // let url = `${config.API_DEV_ENDPOINT}/bookmarks`;\n\n  let url = `${config.API_ENDPOINT}/bookmarks`;\n  fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(newBookmark),\n    headers: {\n      'content-type': 'application/json',\n      'Authorization': `Bearer ${config.API_KEY}`\n    }\n  }).then(res => {\n    if (!res.ok) {\n      throw new Error('Something went wrong, please try again');\n    }\n\n    return res.json();\n  }).then(bookmark => {\n    // call the callback when the request is successful\n    // this is where the App component can remove it from state \n    newBookmarkPost = { ...newBookmarkPost,\n      bookmark_id: bookmark.id\n    };\n    callback(newBookmarkPost); //go to bookmark\n  }).catch(error => {\n    console.log(`there was an error`);\n    console.log(error);\n  });\n}\n\nexport default function AddBookmark(props) {\n  return /*#__PURE__*/_jsxDEV(Context.Consumer, {\n    children: context => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bookmark-button post-icon\",\n      onClick: () => {\n        addBookmarkRequest(props.allPostInfo, props.currentUserId, context.addBookmark);\n      },\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faBookmark\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        message: 'Add this post to your bookmarks',\n        positionClass: 'top-farright'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_c = AddBookmark;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBookmark\");","map":{"version":3,"sources":["/Users/johnakhilomen/Downloads/aipBasicReactApp/src/Components/AddBookmark.js"],"names":["React","Context","config","Tooltip","FontAwesomeIcon","faBookmark","addBookmarkRequest","allPostInfo","currentUserId","callback","newBookmarkPost","newBookmark","user_id","post_id","url","API_ENDPOINT","fetch","method","body","JSON","stringify","headers","API_KEY","then","res","ok","Error","json","bookmark","bookmark_id","id","catch","error","console","log","AddBookmark","props","context","addBookmark"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,SAASC,UAAT,QAA0B,mCAA1B;;AAEA,SAASC,kBAAT,CAA4BC,WAA5B,EAAyCC,aAAzC,EAAwDC,QAAxD,EAAiE;AAC7D,MAAIC,eAAe,GAAGH,WAAtB;AACA,MAAII,WAAW,GAAG;AACdC,IAAAA,OAAO,EAACJ,aADM;AAEdK,IAAAA,OAAO,EAACN,WAAW,CAACM;AAFN,GAAlB,CAF6D,CAO9D;;AACC,MAAIC,GAAG,GAAI,GAAEZ,MAAM,CAACa,YAAa,YAAjC;AACAC,EAAAA,KAAK,CAACF,GAAD,EAAK;AACNG,IAAAA,MAAM,EAAE,MADF;AAENC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeT,WAAf,CAFC;AAGNU,IAAAA,OAAO,EAAE;AACT,sBAAgB,kBADP;AAET,uBAAkB,UAASnB,MAAM,CAACoB,OAAQ;AAFjC;AAHH,GAAL,CAAL,CAQAC,IARA,CAQKC,GAAG,IAAE;AACN,QAAG,CAACA,GAAG,CAACC,EAAR,EAAW;AACX,YAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;AACC;;AACD,WAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,GAbD,EAcCJ,IAdD,CAcOK,QAAD,IAAc;AAClB;AACA;AAEAlB,IAAAA,eAAe,GAAG,EAAC,GAAGA,eAAJ;AAAqBmB,MAAAA,WAAW,EAACD,QAAQ,CAACE;AAA1C,KAAlB;AAEArB,IAAAA,QAAQ,CAACC,eAAD,CAAR,CANkB,CAOjB;AACF,GAtBD,EAuBCqB,KAvBD,CAuBOC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAa,oBAAb;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GA1BD;AA2BH;;AAED,eAAe,SAASG,WAAT,CAAqBC,KAArB,EAA2B;AACtC,sBACI,QAAC,OAAD,CAAS,QAAT;AAAA,cACMC,OAAD,iBACG;AAAQ,MAAA,SAAS,EAAC,2BAAlB;AACI,MAAA,OAAO,EAAE,MAAI;AACT/B,QAAAA,kBAAkB,CAAC8B,KAAK,CAAC7B,WAAP,EAAoB6B,KAAK,CAAC5B,aAA1B,EACd6B,OAAO,CAACC,WADM,CAAlB;AAEH,OAJL;AAAA,8BAKG,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAEjC;AAAvB;AAAA;AAAA;AAAA;AAAA,cALH,eAMG,QAAC,OAAD;AAAS,QAAA,OAAO,EAAE,iCAAlB;AAAqD,QAAA,aAAa,EAAE;AAApE;AAAA;AAAA;AAAA;AAAA,cANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;KAhBuB8B,W","sourcesContent":["import React from 'react';\nimport Context from '../Context';\nimport config from '../config.js';\nimport Tooltip from './Tooltip'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { faBookmark} from '@fortawesome/free-solid-svg-icons';\n\nfunction addBookmarkRequest(allPostInfo, currentUserId, callback){\n    let newBookmarkPost = allPostInfo;\n    let newBookmark = {\n        user_id:currentUserId,\n        post_id:allPostInfo.post_id,\n    }\n    \n   // let url = `${config.API_DEV_ENDPOINT}/bookmarks`;\n    let url = `${config.API_ENDPOINT}/bookmarks`;\n    fetch(url,{\n        method: 'POST',\n        body:JSON.stringify(newBookmark),\n        headers: {\n        'content-type': 'application/json',\n        'Authorization': `Bearer ${config.API_KEY}`\n        },\n    })\n   .then(res=>{\n        if(!res.ok){\n        throw new Error('Something went wrong, please try again')\n        }\n        return res.json()\n    })\n    .then((bookmark) => {\n      // call the callback when the request is successful\n      // this is where the App component can remove it from state \n      \n      newBookmarkPost = {...newBookmarkPost, bookmark_id:bookmark.id}\n     \n      callback(newBookmarkPost);\n       //go to bookmark\n    })\n    .catch(error => {\n        console.log(`there was an error`)\n        console.log(error)\n    })\n}\n\nexport default function AddBookmark(props){\n    return(\n        <Context.Consumer>\n            {(context)=>(\n                <button className=\"bookmark-button post-icon\"\n                    onClick={()=>{\n                        addBookmarkRequest(props.allPostInfo, props.currentUserId,\n                            context.addBookmark);\n                    }}>\n                   <FontAwesomeIcon icon={faBookmark} />\n                   <Tooltip message={'Add this post to your bookmarks'} positionClass={'top-farright'}/>\n                </button>\n            )}\n\n        </Context.Consumer>\n    )\n}"]},"metadata":{},"sourceType":"module"}