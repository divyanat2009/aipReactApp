{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/johnakhilomen/Downloads/aipBasicReactApp/src/Components/ResultList.js\";\nimport React, { Component } from 'react';\nimport SinglePost from './SinglePost.js';\nimport { FilterPosts } from '../Functions/FilterResults';\nimport Context from '../Context';\n\nclass ResultList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.posts = filteredResults.map((post, i) => /*#__PURE__*/_jsxDEV(SinglePost, { ...post,\n      postInfo: post,\n      postsToDisplay: this.props.postsToDisplay\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }, this));\n  }\n\n  render() {\n    let posts = this.props.posts;\n    let filteredResults = posts;\n    let currentDisplay = this.context.currentDisplay;\n    let typeOfPost = '';\n\n    if (this.props.postsToDisplay === 'posts') {\n      typeOfPost = this.context.currentDisplay.dashboard.current_post_type;\n    } else if (this.props.postsToDisplay === 'bookmarks') {\n      typeOfPost = this.context.currentDisplay.bookmark_display.current_post_type;\n    }\n\n    filteredResults = FilterPosts(posts, currentDisplay);\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results-list\",\n      children: [this.props.postsToDisplay === 'posts' ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"You are viewing \", typeOfPost, \" posts \", this.context.currentDisplay.user_posts_displayed, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 47\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Bookmarks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 145\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"result-list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nResultList.contextType = Context;\nexport default ResultList;","map":{"version":3,"sources":["/Users/johnakhilomen/Downloads/aipBasicReactApp/src/Components/ResultList.js"],"names":["React","Component","SinglePost","FilterPosts","Context","ResultList","posts","filteredResults","map","post","i","props","postsToDisplay","render","currentDisplay","context","typeOfPost","dashboard","current_post_type","bookmark_display","user_posts_displayed","contextType"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,SAAQC,WAAR,QAA0B,4BAA1B;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAGA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAkC;AAAA;AAAA;AAAA,SAEhCK,KAFgC,GAExBC,eAAe,CAACC,GAAhB,CAAoB,CAACC,IAAD,EAAOC,CAAP,kBAC5B,QAAC,UAAD,OACWD,IADX;AAEA,MAAA,QAAQ,EAAIA,IAFZ;AAGA,MAAA,cAAc,EAAE,KAAKE,KAAL,CAAWC;AAH3B,OACKF,CADL;AAAA;AAAA;AAAA;AAAA,YADQ,CAFwB;AAAA;;AAQ9BG,EAAAA,MAAM,GAAE;AACN,QAAIP,KAAK,GAAC,KAAKK,KAAL,CAAWL,KAArB;AACA,QAAIC,eAAe,GAAGD,KAAtB;AACA,QAAIQ,cAAc,GAAE,KAAKC,OAAL,CAAaD,cAAjC;AACA,QAAIE,UAAU,GAAG,EAAjB;;AAEE,QAAG,KAAKL,KAAL,CAAWC,cAAX,KAA4B,OAA/B,EAAuC;AACrCI,MAAAA,UAAU,GAAG,KAAKD,OAAL,CAAaD,cAAb,CAA4BG,SAA5B,CAAsCC,iBAAnD;AACD,KAFD,MAGK,IAAG,KAAKP,KAAL,CAAWC,cAAX,KAA4B,WAA/B,EAA2C;AAC9CI,MAAAA,UAAU,GAAG,KAAKD,OAAL,CAAaD,cAAb,CAA4BK,gBAA5B,CAA6CD,iBAA1D;AACD;;AACHX,IAAAA,eAAe,GAAGJ,WAAW,CAACG,KAAD,EAAQQ,cAAR,CAA7B;AAEF,wBACE;AAAS,MAAA,SAAS,EAAC,cAAnB;AAAA,iBACG,KAAKH,KAAL,CAAWC,cAAX,KAA4B,OAA5B,gBAAqC;AAAA,uCAAqBI,UAArB,aAAwC,KAAKD,OAAL,CAAaD,cAAb,CAA4BM,oBAApE;AAAA;AAAA;AAAA;AAAA;AAAA,cAArC,gBAAuI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD1I,eAEE;AAAI,QAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAhC+B;;AAA5Bf,U,CACGgB,W,GAAajB,O;AAkCtB,eAAeC,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport SinglePost from './SinglePost.js';\nimport {FilterPosts} from '../Functions/FilterResults';\nimport Context from '../Context';\n\n\nclass ResultList extends Component{\n  static contextType= Context;\n  posts = filteredResults.map((post, i) => \n  <SinglePost \n  key={i}{...post}\n  postInfo = {post}\n  postsToDisplay={this.props.postsToDisplay}/>);\n\n    render(){\n      let posts=this.props.posts;    \n      let filteredResults = posts;      \n      let currentDisplay= this.context.currentDisplay;\n      let typeOfPost = '';\n\n        if(this.props.postsToDisplay==='posts'){\n          typeOfPost = this.context.currentDisplay.dashboard.current_post_type\n        }\n        else if(this.props.postsToDisplay==='bookmarks'){\n          typeOfPost = this.context.currentDisplay.bookmark_display.current_post_type;\n        }\n      filteredResults = FilterPosts(posts, currentDisplay)\n      \n    return(\n      <section className=\"results-list\">   \n        {this.props.postsToDisplay==='posts'? <h2>You are viewing {typeOfPost} posts {this.context.currentDisplay.user_posts_displayed} </h2> : <h2>Your Bookmarks</h2>}           \n        <ul className=\"result-list\">\n          {\n          \n          }\n        </ul>\n      </section>\n    )\n  }\n}\n\nexport default ResultList; "]},"metadata":{},"sourceType":"module"}