{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\divya\\\\Documents\\\\projects\\\\aipBasicReactApp\\\\src\\\\Components\\\\FilterButtonsForm.js\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport '../_styles/filter.css';\nimport Context from '../Context';\nimport Tooltip from './Tooltip';\n\nclass FilterButtonsForm extends Component {\n  render() {\n    let buttons = this.props.buttonInfo;\n    const Buttons = buttons.map((buttonInfoObject, i) => {\n      const ariaLabel = buttonInfoObject.aria_label;\n      const iconType = buttonInfoObject.icon_type;\n      const fieldType = buttonInfoObject.field_type;\n      const tooltipMessage = buttonInfoObject.tooltipMessage;\n      const tooltipClass = buttonInfoObject.tooltipClass;\n\n      let button = /*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": `button-access ${ariaLabel}`,\n        onClick: () => {\n          this.props.updateFields(fieldType);\n        },\n        className: \"button-icon-link\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"filter-icon\",\n          icon: iconType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          message: `${tooltipMessage}.`,\n          positionClass: tooltipClass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 24\n      }, this);\n\n      return button;\n    });\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"filter-button-row\",\n      children: Buttons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nFilterButtonsForm.defaultProps = {\n  buttonInfo: [],\n  ariaLabel: '',\n  icon_type: '',\n  post_type: ''\n};\nFilterButtonsForm.contextType = Context;\nexport default FilterButtonsForm;","map":{"version":3,"sources":["C:/Users/divya/Documents/projects/aipBasicReactApp/src/Components/FilterButtonsForm.js"],"names":["React","Component","FontAwesomeIcon","Context","Tooltip","FilterButtonsForm","render","buttons","props","buttonInfo","Buttons","map","buttonInfoObject","i","ariaLabel","aria_label","iconType","icon_type","fieldType","field_type","tooltipMessage","tooltipClass","button","updateFields","defaultProps","post_type","contextType"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAO,uBAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,iBAAN,SAAgCJ,SAAhC,CAAyC;AASrCK,EAAAA,MAAM,GAAE;AACN,QAAIC,OAAO,GAAC,KAAKC,KAAL,CAAWC,UAAvB;AACA,UAAMC,OAAO,GAAGH,OAAO,CAACI,GAAR,CAAY,CAACC,gBAAD,EAAkBC,CAAlB,KAAsB;AAChD,YAAMC,SAAS,GAAEF,gBAAgB,CAACG,UAAlC;AACA,YAAMC,QAAQ,GAAGJ,gBAAgB,CAACK,SAAlC;AACA,YAAMC,SAAS,GAAGN,gBAAgB,CAACO,UAAnC;AACA,YAAMC,cAAc,GAAGR,gBAAgB,CAACQ,cAAxC;AACA,YAAMC,YAAY,GAAGT,gBAAgB,CAACS,YAAtC;;AACA,UAAIC,MAAM,gBAAK;AAAgB,sBAAa,iBAAgBR,SAAU,EAAvD;AACC,QAAA,OAAO,EAAE,MAAI;AAAC,eAAKN,KAAL,CAAWe,YAAX,CAAwBL,SAAxB;AAAmC,SADlD;AAEC,QAAA,SAAS,EAAC,kBAFX;AAAA,gCAGf,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAC,aAA3B;AAAyC,UAAA,IAAI,EAAEF;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAHe,eAIf,QAAC,OAAD;AAAS,UAAA,OAAO,EAAG,GAAEI,cAAe,GAApC;AAAwC,UAAA,aAAa,EAAEC;AAAvD;AAAA;AAAA;AAAA;AAAA,gBAJe;AAAA,SAAaR,CAAb;AAAA;AAAA;AAAA;AAAA,cAAf;;AAMF,aAAOS,MAAP;AACD,KAbiB,CAAhB;AAcF,wBACE;AAAS,MAAA,SAAS,EAAC,mBAAnB;AAAA,gBACGZ;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKA;;AA9BqC;;AAAnCL,iB,CACKmB,Y,GAAc;AACjBf,EAAAA,UAAU,EAAC,EADM;AAEjBK,EAAAA,SAAS,EAAC,EAFO;AAGjBG,EAAAA,SAAS,EAAC,EAHO;AAIjBQ,EAAAA,SAAS,EAAC;AAJO,C;AADnBpB,iB,CAQKqB,W,GAAYvB,O;AAyBvB,eAAeE,iBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport '../_styles/filter.css';\r\nimport Context from '../Context';\r\nimport Tooltip from './Tooltip'\r\n\r\n\r\nclass FilterButtonsForm extends Component{\r\n    static defaultProps ={\r\n        buttonInfo:[],\r\n        ariaLabel:'',\r\n        icon_type:'',\r\n        post_type:'',\r\n    };\r\n\r\n    static contextType=Context;\r\n    render(){\r\n      let buttons=this.props.buttonInfo;\r\n      const Buttons = buttons.map((buttonInfoObject,i)=>{\r\n        const ariaLabel= buttonInfoObject.aria_label;\r\n        const iconType = buttonInfoObject.icon_type;\r\n        const fieldType = buttonInfoObject.field_type;\r\n        const tooltipMessage = buttonInfoObject.tooltipMessage;\r\n        const tooltipClass = buttonInfoObject.tooltipClass;\r\n        let button = ( <button key={i} aria-label={`button-access ${ariaLabel}`}\r\n                        onClick={()=>{this.props.updateFields(fieldType)}}\r\n                        className=\"button-icon-link\">\r\n        <FontAwesomeIcon className=\"filter-icon\" icon={iconType} />\r\n        <Tooltip message={`${tooltipMessage}.`} positionClass={tooltipClass}/>\r\n        </button>);\r\n      return(button)\r\n    })\r\n    return(\r\n      <section className=\"filter-button-row\">\r\n        {Buttons}\r\n      </section>\r\n    )\r\n   }\r\n}\r\n\r\nexport default FilterButtonsForm;"]},"metadata":{},"sourceType":"module"}