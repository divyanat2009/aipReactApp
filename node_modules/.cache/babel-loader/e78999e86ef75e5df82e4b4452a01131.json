{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\divya\\\\Documents\\\\projects\\\\aipBasicReactApp\\\\src\\\\Components\\\\Tooltip.js\";\nimport React, { Component } from 'react';\n\nclass Tooltip extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isTooltipVisible: false\n    };\n\n    this.showTooltip = () => {\n      this.setState({\n        isTooltipVisible: true\n      });\n      this.timerHandle = setTimeout(() => this.setState({\n        isTooltipVisible: false\n      }), 2000);\n    };\n\n    this.componentWillUnmount = () => {\n      // To clear the timeout if event take you to another route\n      clearTimeout(this.timerHandle);\n    };\n  }\n\n  render() {\n    const {\n      isTooltipVisible\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tooltip\",\n      onClick: this.showTooltip,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `tooltip-message ${this.props.positionClass} ${isTooltipVisible ? 'visible' : \"\"}`,\n        children: this.props.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Tooltip;","map":{"version":3,"sources":["C:/Users/divya/Documents/projects/aipBasicReactApp/src/Components/Tooltip.js"],"names":["React","Component","Tooltip","state","isTooltipVisible","showTooltip","setState","timerHandle","setTimeout","componentWillUnmount","clearTimeout","render","props","positionClass","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAA+B;AAAA;AAAA;AAAA,SAC7BE,KAD6B,GACvB;AACJC,MAAAA,gBAAgB,EAAC;AADb,KADuB;;AAAA,SAK/BC,WAL+B,GAKnB,MAAI;AACd,WAAKC,QAAL,CAAc;AAACF,QAAAA,gBAAgB,EAAC;AAAlB,OAAd;AACA,WAAKG,WAAL,GAAmBC,UAAU,CAAC,MAAO,KAAKF,QAAL,CAAc;AAACF,QAAAA,gBAAgB,EAAC;AAAlB,OAAd,CAAR,EAAiD,IAAjD,CAA7B;AACD,KAR8B;;AAAA,SAU/BK,oBAV+B,GAUV,MAAK;AACxB;AACCC,MAAAA,YAAY,CAAC,KAAKH,WAAN,CAAZ;AACF,KAb8B;AAAA;;AAe7BI,EAAAA,MAAM,GAAE;AACN,UAAM;AAACP,MAAAA;AAAD,QAAoB,KAAKD,KAA/B;AACA,wBACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AACE,MAAA,OAAO,EAAE,KAAKE,WADhB;AAAA,6BAGE;AAAK,QAAA,SAAS,EAAG,mBAAkB,KAAKO,KAAL,CAAWC,aAAc,IAAGT,gBAAgB,GAAG,SAAH,GAAe,EAAG,EAAjG;AAAA,kBACG,KAAKQ,KAAL,CAAWE;AADd;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA1B4B;;AA6B/B,eAAeZ,OAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Tooltip extends Component{\r\n  state={\r\n    isTooltipVisible:false,\r\n  }\r\n\r\nshowTooltip=()=>{\r\n  this.setState({isTooltipVisible:true});\r\n  this.timerHandle = setTimeout(() =>  this.setState({isTooltipVisible:false}), 2000);\r\n}\r\n\r\ncomponentWillUnmount=() =>{\r\n  // To clear the timeout if event take you to another route\r\n   clearTimeout(this.timerHandle);\r\n}\r\n\r\n  render(){\r\n    const {isTooltipVisible} =this.state\r\n    return (\r\n      <span className='tooltip'\r\n        onClick={this.showTooltip}\r\n      >\r\n        <div className={`tooltip-message ${this.props.positionClass} ${isTooltipVisible ? 'visible' : \"\"}`}>\r\n          {this.props.message}\r\n        </div>\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tooltip;"]},"metadata":{},"sourceType":"module"}